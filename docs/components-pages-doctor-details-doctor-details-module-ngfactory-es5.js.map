{"version":3,"sources":["webpack:///src/app/components/pages/doctor-details/doctor-details.component.ts","webpack:///src/app/components/pages/doctor-details/content/content.component.html","webpack:///src/app/components/pages/doctor-details/doctor-details-routing.module.ts","webpack:///src/app/components/pages/doctor-details/doctor-details.module.ts","webpack:///node_modules/ngx-page-scroll/fesm2015/ngx-page-scroll.js","webpack:///src/app/components/shared/fab-button/fab-button.component.html","webpack:///node_modules/ngx-page-scroll-core/fesm2015/ngx-page-scroll-core.js","webpack:///src/app/components/pages/doctor-details/doctor-details.component.html","webpack:///src/app/components/shared/fab-button/fab-button.component.ts","webpack:///src/app/components/helper/doctor/doctor-helper.service.ts","webpack:///src/app/components/pages/doctor-details/content/content.component.ts"],"names":["DoctorDetailsComponent","ngOnInit","routes","path","component","DoctorDetailsRoutingModule","DoctorDetailsModule","NgxPageScrollDirective","pageScrollService","router","document","pageScrollAdjustHash","pageScrollFinish","ngOnChanges","changes","pageScrollInstance","undefined","ngOnDestroy","stop","getPageScrollTarget","pageScrollTarget","href","fragment","generatePageScrollInstance","options","scrollTarget","pageScroll","namespace","pageScrollHorizontal","verticalScrolling","pageScrollOffset","scrollOffset","pageScrollInterruptible","interruptible","pageScrollInView","scrollInView","pageScrollEasing","easingLogic","pageScrollDuration","duration","pageScrollSpeed","speed","scrollFinishListener","create","pushRouterState","pageScrollOptions","substr","navigate","queryParamsHandling","scroll","start","handleClick","clickEvent","routerLink","urlTree","parseUrl","createUrlTree","isActive","events","pipe","routerEvent","subscribe","setTimeout","decorators","type","args","selector","host","ctorParameters","propDecorators","NgxPageScrollModule","declarations","imports","exports","PageScrollInstance","startScrollPosition","interruptListenersAttached","timer","scrollViews","length","documentElement","body","parentNode","isInlineScrolling","getScrollPropertyValue","scrollingView","scrollLeft","scrollTop","getScrollClientPropertyValue","clientWidth","clientHeight","extractScrollTargetPosition","scrollTargetElement","getScrollTargetElement","top","NaN","left","getInlineScrollingTargetPosition","getScrollingTargetPosition","getCurrentOffset","setScrollPosition","position","reduce","oneAlreadyWorked","startScrollPropertyValue","scrollDistance","Math","abs","isSmallMovement","_minScrollDistance","fireEvent","value","emit","attachInterruptListeners","interruptReporter","detachInterruptListeners","interruptListener","event","report","interruptEvents","forEach","addEventListener","removeEventListener","targetSelector","match","getElementById","querySelector","docEl","windowPageYOffset","defaultView","pageYOffset","windowPageXOffset","pageXOffset","clientTop","clientLeft","box","getBoundingClientRect","round","offsetTop","offsetLeft","advancedInlineOffsetCalculation","accumulatedParentsPos","theWindow","ownerDocument","parentFound","parent","parentElement","getComputedStyle","getPropertyValue","NGXPS_CONFIG","ɵ0$1","t","b","c","d","defaultPageScrollConfig","_interval","_logLevel","interruptKeys","PageScrollService","customConfig","runningInstances","onInterrupted","shouldStop","config","indexOf","key","some","contains","target","stopAll","Object","assign","stopInternal","interrupted","index","splice","clearInterval","console","warn","startScrollPositionFound","scrollRange","scrollPosition","scrollTargetPosition","targetScrollPosition","distanceToScroll","isNaN","log","allReadyAtDestination","executionDuration","tooShortInterval","alreadyInView","startTime","Date","getTime","endTime","setInterval","instance","currentTime","newScrollPosition","stopNow","push","stoppedSome","i","ɵprov","factory","PageScrollService_Factory","token","providedIn","ɵ0","NgxPageScrollCoreModule","forRoot","ngModule","providers","provide","useValue","FabButtonComponent","whatsAppService","whatsAppUrl","getWhatsAppUrl","DoctorHelperService","page","doctorblock","doctordetails","category","doctorcategory","favorite","favoriteTrigger","item","getCategories","items","elems","filter","includes","id","getAuthor","getDoctor","setCategory","getCategory","getDoctorsByCategory","catId","parseInt","setDoctors","doctorsByCategory","ngAfterContentInit","snapshot","params","ContentComponent"],"mappings":"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","file":"components-pages-doctor-details-doctor-details-module-ngfactory-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-doctor-details',\n  templateUrl: './doctor-details.component.html',\n  styleUrls: ['./doctor-details.component.css']\n})\nexport class DoctorDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"section sigma_post-details\" *ngFor=\"let item of doctordetails\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"sigma_post-details-inner\">\n                    <div class=\"entry-content\">\n                        <div class=\"sigma_team style-17 mb-0\">\n                            <div class=\"row no-gutters\">\n                                <div class=\"col-md-4\">\n                                    <div class=\"sigma_team-thumb\">\n                                        <img [src]=\"item.image\" [alt]=\"item.name\">\n                                    </div>\n                                </div>\n                                <div class=\"col-md-8\">\n                                    <div class=\"sigma_team-body\">\n                                        <h5>\n                                            {{item.name}}\n                                        </h5>\n                                        <div class=\"sigma_team-categories\">\n                                            {{item.specialist}}\n                                        </div>\n                                        <div class=\"sigma_team-info mt-4\">\n                                            <span>\n                                                <i class=\"fal fa-phone\"></i>\n                                                {{item.phone}}\n                                            </span>\n                                            <span>\n                                                <i class=\"fal fa-at\"></i>\n                                                {{item.email}}\n                                            </span>\n                                            <span>\n                                                <i class=\"fal fa-building\"></i>\n                                                {{item.location}}\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"my-5\" id=\"overview\">\n                            <h4>Sobre {{item.name}}</h4>\n                            <div [innerHtml]=\"item.htmltext\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row d-flex justify-content-center align-items-center\">\n            <!-- Data -->\n            <div class=\"col-md-6\">\n                <div class=\"sigma_testimonial style-13 text-left bg-white\">\n                    <div class=\"sigma_author-info\">\n                        <div class=\"sigma_testimonial-thumb mr-4\">\n                            <img src=\"assets/img/LOGO-3.jpg\" alt=\"Dr. William Raymundo\">\n                            <span class=\"fas fa-quote-left sigma_testimonial-icon\"></span>\n                        </div>\n                        <div class=\"sigma_author-block\">\n                            <h5>\n                                Aristóteles\n                            </h5>\n                            <span class=\"sigma_testimonial-category\">Filósofo</span>\n                        </div>\n                    </div>\n                    <div class=\"sigma_testimonial-body\">\n                        <p class=\"mb-0\">\"Somos lo que hacemos día a día. De modo que la excelencia no es un acto sino un habito.\"</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-6 sigma_team-thumb\">\n                <img src=\"assets/img/home-2/dr-william-raymundo.jpeg\" alt=\"Dr.William Raymundo\">\n            </div>\n            <!-- Data -->\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DoctorDetailsComponent } from './doctor-details.component';\n\nconst routes: Routes = [{ path: '', component: DoctorDetailsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DoctorDetailsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxPageScrollCoreModule } from 'ngx-page-scroll-core';\nimport { NgxPageScrollModule } from 'ngx-page-scroll';\n\nimport { DoctorDetailsRoutingModule } from './doctor-details-routing.module';\nimport { DoctorDetailsComponent } from './doctor-details.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ContentComponent } from './content/content.component';\n\n@NgModule({\n  declarations: [\n    DoctorDetailsComponent,\n    ContentComponent\n  ],\n  imports: [\n    CommonModule,\n    DoctorDetailsRoutingModule,\n    SharedModule,\n    NgbModule,\n    NgxPageScrollCoreModule,\n    NgxPageScrollModule\n  ]\n})\nexport class DoctorDetailsModule { }\n","import { EventEmitter, Directive, Optional, Inject, Input, Output, NgModule } from '@angular/core';\nimport { PageScrollService, NgxPageScrollCoreModule } from 'ngx-page-scroll-core';\nimport { NavigationEnd, NavigationError, NavigationCancel, Router } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\nimport { filter, take } from 'rxjs/operators';\n\n/* tslint:disable:no-host-metadata-property directive-selector */\nclass NgxPageScrollDirective {\n    constructor(pageScrollService, router, document) {\n        this.pageScrollService = pageScrollService;\n        this.router = router;\n        this.pageScrollAdjustHash = false;\n        this.pageScrollFinish = new EventEmitter();\n        this.document = document;\n    }\n    ngOnChanges(changes) {\n        // Some inputs changed, reset the pageScrollInstance\n        this.pageScrollInstance = undefined;\n    }\n    ngOnDestroy() {\n        if (this.pageScrollInstance) {\n            this.pageScrollService.stop(this.pageScrollInstance);\n        }\n    }\n    getPageScrollTarget() {\n        return this.pageScrollTarget || this.href || (this.fragment ? '#' + this.fragment : '');\n    }\n    generatePageScrollInstance() {\n        if (this.pageScrollInstance === undefined || this.pageScrollInstance === null) {\n            const options = {\n                document: this.document,\n                scrollTarget: this.getPageScrollTarget(),\n            };\n            if (this.pageScroll) {\n                options.namespace = this.pageScroll;\n            }\n            if (this.pageScrollHorizontal !== undefined && this.pageScrollHorizontal !== null) {\n                options.verticalScrolling = !this.pageScrollHorizontal;\n            }\n            if (this.pageScrollOffset !== undefined && this.pageScrollOffset !== null) {\n                options.scrollOffset = this.pageScrollOffset;\n            }\n            if (this.pageScrollInterruptible !== undefined && this.pageScrollInterruptible !== null) {\n                options.interruptible = this.pageScrollInterruptible;\n            }\n            if (this.pageScrollInView !== undefined && this.pageScrollInView !== null) {\n                options.scrollInView = this.pageScrollInView;\n            }\n            if (this.pageScrollEasing) {\n                options.easingLogic = this.pageScrollEasing;\n            }\n            if (this.pageScrollDuration !== undefined && this.pageScrollDuration !== null) {\n                options.duration = this.pageScrollDuration;\n            }\n            if (this.pageScrollSpeed !== undefined && this.pageScrollSpeed !== null) {\n                options.speed = this.pageScrollSpeed;\n            }\n            if (this.pageScrollFinish) {\n                options.scrollFinishListener = this.pageScrollFinish;\n            }\n            this.pageScrollInstance = this.pageScrollService.create(options);\n        }\n        return this.pageScrollInstance;\n    }\n    pushRouterState() {\n        if (this.pageScrollAdjustHash && typeof this.pageScrollInstance.pageScrollOptions.scrollTarget === 'string'\n            && this.pageScrollInstance.pageScrollOptions.scrollTarget.substr(0, 1) === '#') {\n            // \"Navigate\" to the current route again and this time set the fragment/hash\n            this.router.navigate([], {\n                fragment: this.pageScrollInstance.pageScrollOptions.scrollTarget.substr(1),\n                queryParamsHandling: 'preserve',\n            });\n        }\n    }\n    scroll() {\n        const pageScrollInstance = this.generatePageScrollInstance();\n        this.pushRouterState();\n        this.pageScrollService.start(pageScrollInstance);\n    }\n    handleClick(clickEvent) {\n        if (this.routerLink && this.router !== null && this.router !== undefined) {\n            let urlTree;\n            if (typeof this.routerLink === 'string') {\n                urlTree = this.router.parseUrl(this.routerLink);\n            }\n            else {\n                urlTree = this.router.createUrlTree(this.routerLink);\n            }\n            if (!this.router.isActive(urlTree, true)) {\n                // We need to navigate their first.\n                // Navigation is handled by the routerLink directive so we only need to listen for route change\n                this.router.events.pipe(filter(routerEvent => {\n                    // We're only interested in successful navigations or when the navigation fails\n                    return routerEvent instanceof NavigationEnd || routerEvent instanceof NavigationError\n                        || routerEvent instanceof NavigationCancel;\n                }), \n                // Consume only one event, automatically \"unsubscribing\" from the event stream afterwards\n                take(1)).subscribe((routerEvent) => {\n                    if (routerEvent instanceof NavigationEnd) {\n                        // use a timeout to start scrolling as soon as the stack is cleared\n                        setTimeout(() => {\n                            this.scroll();\n                        }, 0);\n                    }\n                });\n                return false; // to preventDefault()\n            }\n        }\n        this.scroll();\n        return false; // to preventDefault()\n    }\n}\nNgxPageScrollDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[pageScroll]',\n                host: {\n                    '(click)': 'handleClick($event)',\n                },\n            },] }\n];\nNgxPageScrollDirective.ctorParameters = () => [\n    { type: PageScrollService },\n    { type: Router, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nNgxPageScrollDirective.propDecorators = {\n    routerLink: [{ type: Input }],\n    href: [{ type: Input }],\n    fragment: [{ type: Input }],\n    pageScrollTarget: [{ type: Input }],\n    pageScrollHorizontal: [{ type: Input }],\n    pageScrollOffset: [{ type: Input }],\n    pageScrollDuration: [{ type: Input }],\n    pageScrollSpeed: [{ type: Input }],\n    pageScrollEasing: [{ type: Input }],\n    pageScrollInterruptible: [{ type: Input }],\n    pageScrollInView: [{ type: Input }],\n    pageScrollAdjustHash: [{ type: Input }],\n    pageScroll: [{ type: Input }],\n    pageScrollFinish: [{ type: Output }]\n};\n\nclass NgxPageScrollModule {\n}\nNgxPageScrollModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    NgxPageScrollDirective,\n                ],\n                imports: [\n                    NgxPageScrollCoreModule,\n                ],\n                exports: [\n                    NgxPageScrollDirective,\n                ],\n            },] }\n];\n\n/*\n * Public API Surface of ngx-page-scroll\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxPageScrollDirective, NgxPageScrollModule };\n//# sourceMappingURL=ngx-page-scroll.js.map\n","<div class=\"fab-wrapper\">\n    <label class=\"fab-button\" for=\"fabCheckbox\">\n        <span class=\"fab-content\">\n            <a [href]=\"whatsAppUrl\" target=\"_blank\" class=\"fab-content\">\n                <i class=\"fab fa-whatsapp icon-fab\"></i>\n            </a>\n        </span>\n    </label>\n  </div>","import * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, Injectable, Inject, NgModule } from '@angular/core';\n\n/**\n * Represents a scrolling action\n */\nclass PageScrollInstance {\n    /**\n     * Private constructor, requires the properties assumed to be the bare minimum.\n     * Use the factory methods to create instances:\n     *      {@link PageScrollService#create}\n     */\n    constructor(pageScrollOptions) {\n        /**\n         * These properties will be set/manipulated if the scroll animation starts\n         */\n        /* The initial value of the scrollTop or scrollLeft position when the animation starts */\n        this.startScrollPosition = 0;\n        /* Whether an interrupt listener is attached to the body or not */\n        this.interruptListenersAttached = false;\n        /* References to the timer instance that is used to perform the scroll animation to be\n         able to clear it on animation end*/\n        this.timer = null;\n        if (!pageScrollOptions.scrollViews || pageScrollOptions.scrollViews.length === 0) {\n            pageScrollOptions.scrollViews = [\n                pageScrollOptions.document.documentElement,\n                pageScrollOptions.document.body,\n                pageScrollOptions.document.body.parentNode,\n            ];\n            this.isInlineScrolling = false;\n        }\n        else {\n            this.isInlineScrolling = true;\n        }\n        this.pageScrollOptions = pageScrollOptions;\n    }\n    static getScrollingTargetPosition(pageScrollOptions, scrollTargetElement) {\n        const body = pageScrollOptions.document.body;\n        const docEl = pageScrollOptions.document.documentElement;\n        const windowPageYOffset = pageScrollOptions.document.defaultView &&\n            pageScrollOptions.document.defaultView.pageYOffset || undefined;\n        const windowPageXOffset = pageScrollOptions.document.defaultView &&\n            pageScrollOptions.document.defaultView.pageXOffset || undefined;\n        const scrollTop = windowPageYOffset || docEl.scrollTop || body.scrollTop;\n        const scrollLeft = windowPageXOffset || docEl.scrollLeft || body.scrollLeft;\n        const clientTop = docEl.clientTop || body.clientTop || 0;\n        const clientLeft = docEl.clientLeft || body.clientLeft || 0;\n        if (scrollTargetElement === undefined || scrollTargetElement === null) {\n            // No element found, so return the current position to not cause any change in scroll position\n            return { top: scrollTop, left: scrollLeft };\n        }\n        const box = scrollTargetElement.getBoundingClientRect();\n        const top = box.top + scrollTop - clientTop;\n        const left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    }\n    static getInlineScrollingTargetPosition(pageScrollOptions, scrollTargetElement) {\n        const position = { top: scrollTargetElement.offsetTop, left: scrollTargetElement.offsetLeft };\n        if (pageScrollOptions.advancedInlineOffsetCalculation && pageScrollOptions.scrollViews.length === 1) {\n            const accumulatedParentsPos = { top: 0, left: 0 };\n            // not named window to make sure we're not getting the global window variable by accident\n            const theWindow = scrollTargetElement.ownerDocument.defaultView;\n            let parentFound = false;\n            // Start parent is the immediate parent\n            let parent = scrollTargetElement.parentElement;\n            // Iterate upwards all parents\n            while (!parentFound && parent !== undefined && parent !== null) {\n                if (theWindow.getComputedStyle(parent).getPropertyValue('position') === 'relative') {\n                    accumulatedParentsPos.top += parent.offsetTop;\n                    accumulatedParentsPos.left += parent.offsetLeft;\n                }\n                // Next iteration\n                parent = parent.parentElement;\n                parentFound = parent === pageScrollOptions.scrollViews[0];\n            }\n            if (parentFound) {\n                // Only use the results if we found the parent, otherwise we accumulated too much anyway\n                position.top += accumulatedParentsPos.top;\n                position.left += accumulatedParentsPos.left;\n            }\n            else {\n                /* TODO Uncomment\n                if (PageScrollConfig._logLevel >= 2 || (PageScrollConfig._logLevel >= 1 && isDevMode())) {\n                  console.warn('Unable to find nested scrolling targets parent!');\n                }*/\n            }\n        }\n        return position;\n    }\n    getScrollPropertyValue(scrollingView) {\n        if (!this.pageScrollOptions.verticalScrolling) {\n            return scrollingView.scrollLeft;\n        }\n        return scrollingView.scrollTop;\n    }\n    getScrollClientPropertyValue(scrollingView) {\n        if (!this.pageScrollOptions.verticalScrolling) {\n            return scrollingView.clientWidth;\n        }\n        return scrollingView.clientHeight;\n    }\n    /**\n     * Extract the exact location of the scrollTarget element.\n     *\n     * Extract the scrollTarget HTMLElement from the given PageScrollTarget object. The latter one may be\n     * a string like \"#heading2\", then this method returns the corresponding DOM element for that id.\n     *\n     */\n    extractScrollTargetPosition() {\n        const scrollTargetElement = this.getScrollTargetElement();\n        if (scrollTargetElement === null || scrollTargetElement === undefined) {\n            // Scroll target not found\n            return { top: NaN, left: NaN };\n        }\n        if (this.isInlineScrolling) {\n            return PageScrollInstance.getInlineScrollingTargetPosition(this.pageScrollOptions, scrollTargetElement);\n        }\n        return PageScrollInstance.getScrollingTargetPosition(this.pageScrollOptions, scrollTargetElement);\n    }\n    /**\n     * Get the top offset of the scroll animation.\n     * This automatically takes the offset location of the scrolling container/scrolling view\n     * into account (for nested/inline scrolling).\n     */\n    getCurrentOffset() {\n        return this.pageScrollOptions.scrollOffset;\n    }\n    /**\n     * Sets the \"scrollTop\" or \"scrollLeft\" property for all scrollViews to the provided value\n     * @return true if at least for one ScrollTopSource the scrollTop/scrollLeft value could be set and it kept the new value.\n     *          false if it failed for all ScrollViews, meaning that we should stop the animation\n     *          (probably because we're at the end of the scrolling region)\n     */\n    setScrollPosition(position) {\n        // Set the new scrollTop/scrollLeft to all scrollViews elements\n        return this.pageScrollOptions.scrollViews.reduce((oneAlreadyWorked, scrollingView) => {\n            const startScrollPropertyValue = this.getScrollPropertyValue(scrollingView);\n            if (scrollingView && startScrollPropertyValue !== undefined && startScrollPropertyValue !== null) {\n                const scrollDistance = Math.abs(startScrollPropertyValue - position);\n                // The movement we need to perform is less than 2px\n                // This we consider a small movement which some browser may not perform when\n                // changing the scrollTop/scrollLeft property\n                // Thus in this cases we do not stop the scroll animation, although setting the\n                // scrollTop/scrollLeft value \"fails\"\n                const isSmallMovement = scrollDistance < this.pageScrollOptions._minScrollDistance;\n                if (!this.pageScrollOptions.verticalScrolling) {\n                    scrollingView.scrollLeft = position;\n                }\n                else {\n                    scrollingView.scrollTop = position;\n                }\n                // Return true if setting the new scrollTop/scrollLeft value worked\n                // We consider that it worked if the new scrollTop/scrollLeft value is closer to the\n                // desired scrollTop/scrollLeft than before (it might not be exactly the value we\n                // set due to dpi or rounding irregularities)\n                if (isSmallMovement || scrollDistance > Math.abs(this.getScrollPropertyValue(scrollingView) - position)) {\n                    return true;\n                }\n            }\n            return oneAlreadyWorked;\n        }, false);\n    }\n    /**\n     * Trigger firing a animation finish event\n     * @param value Whether the animation finished at the target (true) or got interrupted (false)\n     */\n    fireEvent(value) {\n        if (this.pageScrollOptions.scrollFinishListener) {\n            this.pageScrollOptions.scrollFinishListener.emit(value);\n        }\n    }\n    /**\n     * Attach the interrupt listeners to the PageScrollInstance body. The given interruptReporter\n     * will be called if any of the attached events is fired.\n     *\n     * Possibly attached interruptListeners are automatically removed from the body before the new one will be attached.\n     */\n    attachInterruptListeners(interruptReporter) {\n        if (this.interruptListenersAttached) {\n            // Detach possibly existing listeners first\n            this.detachInterruptListeners();\n        }\n        this.interruptListener = (event) => {\n            interruptReporter.report(event, this);\n        };\n        this.pageScrollOptions.interruptEvents.forEach((event) => this.pageScrollOptions.document.body.addEventListener(event, this.interruptListener));\n        this.interruptListenersAttached = true;\n    }\n    /**\n     * Remove event listeners from the body and stop listening for events that might be treated as \"animation\n     * interrupt\" events.\n     */\n    detachInterruptListeners() {\n        this.pageScrollOptions.interruptEvents.forEach((event) => this.pageScrollOptions.document.body.removeEventListener(event, this.interruptListener));\n        this.interruptListenersAttached = false;\n    }\n    getScrollTargetElement() {\n        if (typeof this.pageScrollOptions.scrollTarget === 'string') {\n            const targetSelector = this.pageScrollOptions.scrollTarget;\n            if (targetSelector.match(/^#[^\\s]+$/g) !== null) {\n                // It's an id selector and a valid id, as it does not contain any white space characters\n                return this.pageScrollOptions.document.getElementById(targetSelector.substr(1));\n            }\n            return this.pageScrollOptions.document.querySelector(targetSelector);\n        }\n        return this.pageScrollOptions.scrollTarget;\n    }\n}\n\nconst NGXPS_CONFIG = new InjectionToken('ngxps_config');\nconst ɵ0$1 = (t, b, c, d) => {\n    // Linear easing\n    return c * t / d + b;\n};\nconst defaultPageScrollConfig = {\n    _interval: 10,\n    _minScrollDistance: 2,\n    _logLevel: 1,\n    namespace: 'default',\n    verticalScrolling: true,\n    duration: 1250,\n    scrollOffset: 0,\n    advancedInlineOffsetCalculation: false,\n    interruptEvents: ['mousedown', 'wheel', 'DOMMouseScroll', 'mousewheel', 'keyup', 'touchmove'],\n    interruptKeys: [' ', 'Escape', 'Tab', 'Enter', 'PageUp', 'PageDown', 'Home', 'End', 'ArrowUp', 'ArrowRight', 'ArrowLeft', 'ArrowDown'],\n    interruptible: true,\n    scrollInView: true,\n    easingLogic: ɵ0$1,\n};\n\nclass PageScrollService {\n    constructor(customConfig) {\n        this.runningInstances = [];\n        this.onInterrupted = {\n            report: (event, pageScrollInstance) => {\n                if (!pageScrollInstance.pageScrollOptions.interruptible) {\n                    // Non-interruptible anyway, so do not stop anything\n                    return;\n                }\n                let shouldStop = true;\n                if (event.type === 'keyup') {\n                    // Only stop if specific keys have been pressed, for all others don't stop anything\n                    if (this.config.interruptKeys.indexOf(event.key) === -1) {\n                        // The pressed key is not in the list of interrupting keys\n                        shouldStop = false;\n                    }\n                }\n                else if (event.type === 'mousedown') {\n                    // For mousedown events we only stop the scroll animation of the mouse has\n                    // been clicked inside the scrolling container\n                    if (!pageScrollInstance.pageScrollOptions.scrollViews.some(scrollingView => scrollingView.contains(event.target))) {\n                        // Mouse clicked an element which is not inside any of the the scrolling containers\n                        shouldStop = false;\n                    }\n                }\n                if (shouldStop) {\n                    this.stopAll(pageScrollInstance.pageScrollOptions.namespace);\n                }\n            },\n        };\n        this.config = Object.assign(Object.assign({}, defaultPageScrollConfig), customConfig);\n    }\n    stopInternal(interrupted, pageScrollInstance) {\n        const index = this.runningInstances.indexOf(pageScrollInstance);\n        if (index >= 0) {\n            this.runningInstances.splice(index, 1);\n        }\n        if (pageScrollInstance.interruptListenersAttached) {\n            pageScrollInstance.detachInterruptListeners();\n        }\n        if (pageScrollInstance.timer) {\n            // Clear/Stop the timer\n            clearInterval(pageScrollInstance.timer);\n            // Clear the reference to this timer\n            pageScrollInstance.timer = undefined;\n            pageScrollInstance.fireEvent(!interrupted);\n            return true;\n        }\n        return false;\n    }\n    create(options) {\n        return new PageScrollInstance(Object.assign(Object.assign({}, this.config), options));\n    }\n    /**\n     * Start a scroll animation. All properties of the animation are stored in the given {@link PageScrollInstance} object.\n     *\n     * This is the core functionality of the whole library.\n     */\n    // tslint:disable-next-line:cyclomatic-complexity\n    start(pageScrollInstance) {\n        // Merge the default options in the pageScrollInstance options\n        pageScrollInstance.pageScrollOptions = Object.assign(Object.assign({}, this.config), pageScrollInstance.pageScrollOptions);\n        // Stop all possibly running scroll animations in the same namespace\n        this.stopAll(pageScrollInstance.pageScrollOptions.namespace);\n        if (pageScrollInstance.pageScrollOptions.scrollViews === null || pageScrollInstance.pageScrollOptions.scrollViews.length === 0) {\n            // No scrollViews specified, thus we can't animate anything\n            if (this.config._logLevel >= 2 || (this.config._logLevel >= 1 && isDevMode())) {\n                console.warn('No scrollViews specified, thus ngx-page-scroll does not know which DOM elements to scroll');\n            }\n            return;\n        }\n        let startScrollPositionFound = false;\n        let scrollRange = pageScrollInstance.getScrollClientPropertyValue(pageScrollInstance.pageScrollOptions.scrollViews[0]);\n        // Reset start scroll position to 0. If any of the scrollViews has a different one, it will be extracted next\n        pageScrollInstance.startScrollPosition = 0;\n        // Get the start scroll position from the scrollViews (e.g. if the user already scrolled down the content)\n        pageScrollInstance.pageScrollOptions.scrollViews.forEach(scrollingView => {\n            if (scrollingView === undefined || scrollingView === null) {\n                return;\n            }\n            // Get the scrollTop or scrollLeft value of the first scrollingView that returns a value for its \"scrollTop\"\n            // or \"scrollLeft\" property that is not undefined and unequal to 0\n            const scrollPosition = pageScrollInstance.getScrollPropertyValue(scrollingView);\n            if (!startScrollPositionFound && scrollPosition) {\n                // We found a scrollingView that does not have scrollTop or scrollLeft 0\n                // Return the scroll position value, as this will be our startScrollPosition\n                pageScrollInstance.startScrollPosition = scrollPosition;\n                startScrollPositionFound = true;\n                // Remember te scrollRange of this scrollingView\n                scrollRange = pageScrollInstance.getScrollClientPropertyValue(scrollingView);\n            }\n        });\n        const pageScrollOffset = pageScrollInstance.getCurrentOffset();\n        // Calculate the target position that the scroll animation should go to\n        const scrollTargetPosition = pageScrollInstance.extractScrollTargetPosition();\n        pageScrollInstance.targetScrollPosition = Math.round((pageScrollInstance.pageScrollOptions.verticalScrolling ? scrollTargetPosition.top : scrollTargetPosition.left) - pageScrollOffset);\n        // Calculate the distance we need to go in total\n        pageScrollInstance.distanceToScroll = pageScrollInstance.targetScrollPosition - pageScrollInstance.startScrollPosition;\n        if (isNaN(pageScrollInstance.distanceToScroll)) {\n            // We weren't able to find the target position, maybe the element does not exist?\n            if (this.config._logLevel >= 2 || (this.config._logLevel >= 1 && isDevMode())) {\n                console.log('Scrolling not possible, as we can\\'t find the specified target');\n            }\n            pageScrollInstance.fireEvent(false);\n            return;\n        }\n        // We're at the final destination already\n        // OR we need to scroll down but are already at the end\n        // OR we need to scroll up but are at the top already\n        const allReadyAtDestination = Math.abs(pageScrollInstance.distanceToScroll) < pageScrollInstance.pageScrollOptions._minScrollDistance;\n        // Check how long we need to scroll if a speed option is given\n        // Default executionDuration is the specified duration\n        pageScrollInstance.executionDuration = pageScrollInstance.pageScrollOptions.duration;\n        // Maybe we need to pay attention to the speed option?\n        if ((pageScrollInstance.pageScrollOptions.speed !== undefined && pageScrollInstance.pageScrollOptions.speed !== null) &&\n            (pageScrollInstance.pageScrollOptions.duration === undefined || pageScrollInstance.pageScrollOptions.duration === null)) {\n            // Speed option is set and no duration => calculate duration based on speed and scroll distance\n            pageScrollInstance.executionDuration =\n                Math.abs(pageScrollInstance.distanceToScroll) / pageScrollInstance.pageScrollOptions.speed * 1000;\n        }\n        // We should go there directly, as our \"animation\" would have one big step\n        // only anyway and this way we save the interval stuff\n        const tooShortInterval = pageScrollInstance.executionDuration <= pageScrollInstance.pageScrollOptions._interval;\n        if (allReadyAtDestination || tooShortInterval) {\n            if (this.config._logLevel >= 2 || (this.config._logLevel >= 1 && isDevMode())) {\n                if (allReadyAtDestination) {\n                    console.log('Scrolling not possible, as we can\\'t get any closer to the destination');\n                }\n                else {\n                    console.log('Scroll duration shorter that interval length, jumping to target');\n                }\n            }\n            pageScrollInstance.setScrollPosition(pageScrollInstance.targetScrollPosition);\n            pageScrollInstance.fireEvent(true);\n            return;\n        }\n        if (!pageScrollInstance.pageScrollOptions.scrollInView) {\n            const alreadyInView = pageScrollInstance.targetScrollPosition > pageScrollInstance.startScrollPosition &&\n                pageScrollInstance.targetScrollPosition <= pageScrollInstance.startScrollPosition + scrollRange;\n            if (alreadyInView) {\n                if (this.config._logLevel >= 2 || (this.config._logLevel >= 1 && isDevMode())) {\n                    console.log('Not scrolling, as target already in view');\n                }\n                pageScrollInstance.fireEvent(true);\n                return;\n            }\n        }\n        // Register the interrupt listeners if we want an interruptible scroll animation\n        if (pageScrollInstance.pageScrollOptions.interruptible) {\n            pageScrollInstance.attachInterruptListeners(this.onInterrupted);\n        }\n        // Let's get started, get the start time...\n        pageScrollInstance.startTime = new Date().getTime();\n        // .. and calculate the end time (when we need to finish at last)\n        pageScrollInstance.endTime = pageScrollInstance.startTime + pageScrollInstance.executionDuration;\n        pageScrollInstance.timer = setInterval((instance) => {\n            // Take the current time\n            const currentTime = new Date().getTime();\n            // Determine the new scroll position\n            let newScrollPosition;\n            let stopNow = false;\n            if (instance.endTime <= currentTime) {\n                // We're over the time already, so go the targetScrollPosition (aka destination)\n                newScrollPosition = instance.targetScrollPosition;\n                stopNow = true;\n            }\n            else {\n                // Calculate the scroll position based on the current time using the easing function\n                newScrollPosition = Math.round(instance.pageScrollOptions.easingLogic(currentTime - instance.startTime, instance.startScrollPosition, instance.distanceToScroll, instance.executionDuration));\n            }\n            if (this.config._logLevel >= 5 && isDevMode()) {\n                console.warn('Scroll Position: ' + newScrollPosition);\n            }\n            // Set the new scrollPosition to all scrollViews elements\n            if (!instance.setScrollPosition(newScrollPosition)) {\n                // Setting the new scrollTop/scrollLeft value failed for all ScrollViews\n                // early stop the scroll animation to save resources\n                stopNow = true;\n            }\n            // At the end do the internal stop maintenance and fire the pageScrollFinish event\n            // (otherwise the event might arrive at \"too early\")\n            if (stopNow) {\n                this.stopInternal(false, instance);\n            }\n        }, this.config._interval, pageScrollInstance);\n        // Register the instance as running one\n        this.runningInstances.push(pageScrollInstance);\n    }\n    scroll(options) {\n        this.start(this.create(options));\n    }\n    /**\n     * Stop all running scroll animations. Optionally limit to stop only the ones of specific namespace.\n     */\n    stopAll(namespace) {\n        if (this.runningInstances.length > 0) {\n            let stoppedSome = false;\n            for (let i = 0; i < this.runningInstances.length; ++i) {\n                const pageScrollInstance = this.runningInstances[i];\n                if (!namespace || pageScrollInstance.pageScrollOptions.namespace === namespace) {\n                    stoppedSome = true;\n                    this.stopInternal(true, pageScrollInstance);\n                    // Decrease the counter, as we removed an item from the array we iterate over\n                    i--;\n                }\n            }\n            return stoppedSome;\n        }\n        return false;\n    }\n    stop(pageScrollInstance) {\n        return this.stopInternal(true, pageScrollInstance);\n    }\n}\nPageScrollService.ɵprov = i0.ɵɵdefineInjectable({ factory: function PageScrollService_Factory() { return new PageScrollService(i0.ɵɵinject(NGXPS_CONFIG)); }, token: PageScrollService, providedIn: \"root\" });\nPageScrollService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root',\n            },] }\n];\nPageScrollService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [NGXPS_CONFIG,] }] }\n];\n\nconst ɵ0 = {};\nclass NgxPageScrollCoreModule {\n    static forRoot(config) {\n        return {\n            ngModule: NgxPageScrollCoreModule,\n            providers: [PageScrollService, { provide: NGXPS_CONFIG, useValue: config }],\n        };\n    }\n}\nNgxPageScrollCoreModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    PageScrollService,\n                    { provide: NGXPS_CONFIG, useValue: ɵ0 },\n                ],\n            },] }\n];\n\n/*\n * Public API Surface of ngx-page-scroll-core\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGXPS_CONFIG, NgxPageScrollCoreModule, PageScrollInstance, PageScrollService, defaultPageScrollConfig };\n//# sourceMappingURL=ngx-page-scroll-core.js.map\n","<app-header-two></app-header-two>\n<app-breadcrumbs></app-breadcrumbs>\n<app-content></app-content>\n<app-footer></app-footer>\n<app-fab-button></app-fab-button>","import { Component, OnInit } from '@angular/core';\nimport { WhatsappService } from '../../helper/whatsapp.service';\n\n@Component({\n  selector: 'app-fab-button',\n  templateUrl: './fab-button.component.html',\n  styleUrls: ['./fab-button.component.css']\n})\nexport class FabButtonComponent implements OnInit {\n\n  whatsAppUrl = '';\n\n  constructor(private whatsAppService: WhatsappService) { }\n\n  ngOnInit(): void {\n    this.whatsAppUrl = this.whatsAppService.getWhatsAppUrl();\n  }\n\n}\n","import { Injectable, AfterContentInit, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport doctor from '../../data/doctor/doctor.json';\nimport category from '../../data/category.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoctorHelperService implements AfterContentInit, OnInit {\n  // pagination\n  page: number = 1;\n  // Doctor\n  public doctorblock = doctor;\n  public doctordetails = doctor;\n  // Category\n  public category = category;\n  public doctorcategory = category;\n  constructor(private router: ActivatedRoute) {}\n  // Add Heart\n  public favorite: boolean = false;\n  favoriteTrigger(item: { favorite: boolean; }) {\n    item.favorite = !item.favorite;\n  }\n  // Category\n  public getCategories(items: string | any[]) {\n    var elems = category.filter((item: { id: string; }) => {\n      return items.includes(item.id)\n    });\n    return elems;\n  }\n  // Author\n  public getAuthor(items: string | any[]) {\n    var elems = doctor.filter((item: { id: string; }) => {\n      return items.includes(item.id)\n    });\n    return elems;\n  }\n  // Doctor Details\n  public getDoctor(id: any) {\n    this.doctordetails = doctor.filter((item: { id: any; }) => { return item.id == id });\n  }\n  // Category Filter\n  public setCategory(id: any) {\n    this.doctorcategory = id;\n  }\n  public getCategory() {\n    return this.doctorcategory;\n  }\n  public getDoctorsByCategory(catId: string) {\n    return this.doctorblock = doctor.filter((item: { category: number[]; }) => { return item.category.includes(parseInt(catId)) });\n  }\n  // Fetch All filter\n  public setDoctors() {\n    var doctorsByCategory = this.getCategory() != undefined ? this.getDoctorsByCategory(this.getCategory()) : '';\n    if ((doctorsByCategory != '' || doctorsByCategory != undefined || doctorsByCategory != null) && doctorsByCategory.length > 0) {\n      this.doctorblock = doctorsByCategory;\n    } \n  }\n  ngAfterContentInit(): void {\n    this.setCategory(this.router.snapshot.params.catId);\n    this.setDoctors();\n    this.getDoctor(this.router.snapshot.params.id);\n  }\n  ngOnInit(): void {\n\n  }\n}\n","import { AfterContentInit, Component } from '@angular/core';\nimport { DoctorHelperService } from 'src/app/components/helper/doctor/doctor-helper.service';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.css']\n})\nexport class ContentComponent extends DoctorHelperService implements AfterContentInit {\n  ngAfterContentInit(){\n    this.setCategory(1);\n    this.setDoctors();\n    this.getDoctor(1);\n  }\n}\n"]}
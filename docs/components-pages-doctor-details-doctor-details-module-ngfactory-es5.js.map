{"version":3,"sources":["webpack:///src/app/components/pages/doctor-details/doctor-details.component.ts","webpack:///src/app/components/pages/doctor-details/content/content.component.html","webpack:///src/app/components/pages/doctor-details/doctor-details-routing.module.ts","webpack:///src/app/components/pages/doctor-details/doctor-details.module.ts","webpack:///node_modules/ngx-page-scroll/fesm2015/ngx-page-scroll.js","webpack:///src/app/components/shared/fab-button/fab-button.component.html","webpack:///node_modules/ngx-page-scroll-core/fesm2015/ngx-page-scroll-core.js","webpack:///src/app/components/pages/doctor-details/doctor-details.component.html","webpack:///src/app/components/shared/fab-button/fab-button.component.ts","webpack:///src/app/components/helper/doctor/doctor-helper.service.ts","webpack:///src/app/components/pages/doctor-details/content/content.component.ts"],"names":["DoctorDetailsComponent","routes","path","component","DoctorDetailsRoutingModule","DoctorDetailsModule","NgxPageScrollDirective","pageScrollService","router","document","pageScrollAdjustHash","pageScrollFinish","changes","pageScrollInstance","undefined","stop","pageScrollTarget","href","fragment","options","scrollTarget","getPageScrollTarget","pageScroll","namespace","pageScrollHorizontal","verticalScrolling","pageScrollOffset","scrollOffset","pageScrollInterruptible","interruptible","pageScrollInView","scrollInView","pageScrollEasing","easingLogic","pageScrollDuration","duration","pageScrollSpeed","speed","scrollFinishListener","create","pageScrollOptions","substr","navigate","queryParamsHandling","generatePageScrollInstance","pushRouterState","start","clickEvent","routerLink","urlTree","parseUrl","createUrlTree","isActive","events","pipe","routerEvent","subscribe","setTimeout","scroll","decorators","type","args","selector","host","ctorParameters","propDecorators","NgxPageScrollModule","declarations","imports","exports","PageScrollInstance","startScrollPosition","interruptListenersAttached","timer","scrollViews","length","documentElement","body","parentNode","isInlineScrolling","scrollingView","scrollLeft","scrollTop","clientWidth","clientHeight","scrollTargetElement","getScrollTargetElement","top","NaN","left","getInlineScrollingTargetPosition","getScrollingTargetPosition","position","reduce","oneAlreadyWorked","startScrollPropertyValue","getScrollPropertyValue","scrollDistance","Math","abs","isSmallMovement","_minScrollDistance","value","emit","interruptReporter","detachInterruptListeners","interruptListener","event","report","interruptEvents","forEach","addEventListener","removeEventListener","targetSelector","match","getElementById","querySelector","docEl","windowPageYOffset","defaultView","pageYOffset","windowPageXOffset","pageXOffset","clientTop","clientLeft","box","getBoundingClientRect","round","offsetTop","offsetLeft","advancedInlineOffsetCalculation","accumulatedParentsPos","theWindow","ownerDocument","parentFound","parent","parentElement","getComputedStyle","getPropertyValue","NGXPS_CONFIG","ɵ0","t","b","c","d","defaultPageScrollConfig","_interval","_logLevel","interruptKeys","PageScrollService","customConfig","runningInstances","onInterrupted","shouldStop","config","indexOf","key","some","contains","target","stopAll","Object","assign","interrupted","index","splice","clearInterval","fireEvent","console","warn","startScrollPositionFound","scrollRange","getScrollClientPropertyValue","scrollPosition","getCurrentOffset","scrollTargetPosition","extractScrollTargetPosition","targetScrollPosition","distanceToScroll","isNaN","log","allReadyAtDestination","executionDuration","tooShortInterval","setScrollPosition","alreadyInView","attachInterruptListeners","startTime","Date","getTime","endTime","setInterval","instance","currentTime","newScrollPosition","stopNow","stopInternal","push","stoppedSome","i","ɵprov","factory","PageScrollService_Factory","token","providedIn","ɵ0$1","NgxPageScrollCoreModule","ngModule","providers","provide","useValue","FabButtonComponent","whatsAppService","whatsAppUrl","getWhatsAppUrl","DoctorHelperService","page","doctorblock","doctordetails","category","doctorcategory","favorite","item","items","elems","filter","includes","id","catId","parseInt","doctorsByCategory","getCategory","getDoctorsByCategory","setCategory","snapshot","params","setDoctors","getDoctor","ContentComponent"],"mappings":"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","file":"components-pages-doctor-details-doctor-details-module-ngfactory-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-doctor-details',\r\n  templateUrl: './doctor-details.component.html',\r\n  styleUrls: ['./doctor-details.component.css']\r\n})\r\nexport class DoctorDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"section sigma_post-details\" *ngFor=\"let item of doctordetails\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12\">\r\n                <div class=\"sigma_post-details-inner\">\r\n                    <div class=\"entry-content\">\r\n                        <div class=\"sigma_team style-17 mb-0\">\r\n                            <div class=\"row no-gutters\">\r\n                                <div class=\"col-md-4\">\r\n                                    <div class=\"sigma_team-thumb\">\r\n                                        <img [src]=\"item.image\" [alt]=\"item.name\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-8\">\r\n                                    <div class=\"sigma_team-body\">\r\n                                        <h5>\r\n                                            {{item.name}}\r\n                                        </h5>\r\n                                        <div class=\"sigma_team-categories\">\r\n                                            {{item.specialist}}\r\n                                        </div>\r\n                                        <div class=\"sigma_team-info mt-4\">\r\n                                            <span>\r\n                                                <i class=\"fal fa-phone\"></i>\r\n                                                {{item.phone}}\r\n                                            </span>\r\n                                            <span>\r\n                                                <i class=\"fal fa-at\"></i>\r\n                                                {{item.email}}\r\n                                            </span>\r\n                                            <span>\r\n                                                <i class=\"fal fa-building\"></i>\r\n                                                {{item.location}}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"my-5\" id=\"overview\">\r\n                            <h4>Sobre {{item.name}}</h4>\r\n                            <div [innerHtml]=\"item.htmltext\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row d-flex justify-content-center align-items-center\">\r\n            <!-- Data -->\r\n            <div class=\"col-md-6\">\r\n                <div class=\"sigma_testimonial style-13 text-left bg-white\">\r\n                    <div class=\"sigma_author-info\">\r\n                        <div class=\"sigma_testimonial-thumb mr-4\">\r\n                            <img src=\"assets/img/LOGO-3.jpg\" alt=\"Dr. William Raymundo\">\r\n                            <span class=\"fas fa-quote-left sigma_testimonial-icon\"></span>\r\n                        </div>\r\n                        <div class=\"sigma_author-block\">\r\n                            <h5>\r\n                                Aristóteles\r\n                            </h5>\r\n                            <span class=\"sigma_testimonial-category\">Filósofo</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"sigma_testimonial-body\">\r\n                        <p class=\"mb-0\">\"Somos lo que hacemos día a día. De modo que la excelencia no es un acto sino un habito.\"</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-6 sigma_team-thumb\">\r\n                <img src=\"assets/img/home-2/dr-william-raymundo.jpeg\" alt=\"Dr.William Raymundo\">\r\n            </div>\r\n            <!-- Data -->\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DoctorDetailsComponent } from './doctor-details.component';\r\n\r\nconst routes: Routes = [{ path: '', component: DoctorDetailsComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DoctorDetailsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxPageScrollCoreModule } from 'ngx-page-scroll-core';\r\nimport { NgxPageScrollModule } from 'ngx-page-scroll';\r\n\r\nimport { DoctorDetailsRoutingModule } from './doctor-details-routing.module';\r\nimport { DoctorDetailsComponent } from './doctor-details.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ContentComponent } from './content/content.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DoctorDetailsComponent,\r\n    ContentComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DoctorDetailsRoutingModule,\r\n    SharedModule,\r\n    NgbModule,\r\n    NgxPageScrollCoreModule,\r\n    NgxPageScrollModule\r\n  ]\r\n})\r\nexport class DoctorDetailsModule { }\r\n","import { EventEmitter, Directive, Optional, Inject, Input, Output, NgModule } from '@angular/core';\nimport { PageScrollService, NgxPageScrollCoreModule } from 'ngx-page-scroll-core';\nimport { NavigationEnd, NavigationError, NavigationCancel, Router } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\nimport { filter, take } from 'rxjs/operators';\n\n/* tslint:disable:no-host-metadata-property directive-selector */\nclass NgxPageScrollDirective {\n    constructor(pageScrollService, router, document) {\n        this.pageScrollService = pageScrollService;\n        this.router = router;\n        this.pageScrollAdjustHash = false;\n        this.pageScrollFinish = new EventEmitter();\n        this.document = document;\n    }\n    ngOnChanges(changes) {\n        // Some inputs changed, reset the pageScrollInstance\n        this.pageScrollInstance = undefined;\n    }\n    ngOnDestroy() {\n        if (this.pageScrollInstance) {\n            this.pageScrollService.stop(this.pageScrollInstance);\n        }\n    }\n    getPageScrollTarget() {\n        return this.pageScrollTarget || this.href || (this.fragment ? '#' + this.fragment : '');\n    }\n    generatePageScrollInstance() {\n        if (this.pageScrollInstance === undefined || this.pageScrollInstance === null) {\n            const options = {\n                document: this.document,\n                scrollTarget: this.getPageScrollTarget(),\n            };\n            if (this.pageScroll) {\n                options.namespace = this.pageScroll;\n            }\n            if (this.pageScrollHorizontal !== undefined && this.pageScrollHorizontal !== null) {\n                options.verticalScrolling = !this.pageScrollHorizontal;\n            }\n            if (this.pageScrollOffset !== undefined && this.pageScrollOffset !== null) {\n                options.scrollOffset = this.pageScrollOffset;\n            }\n            if (this.pageScrollInterruptible !== undefined && this.pageScrollInterruptible !== null) {\n                options.interruptible = this.pageScrollInterruptible;\n            }\n            if (this.pageScrollInView !== undefined && this.pageScrollInView !== null) {\n                options.scrollInView = this.pageScrollInView;\n            }\n            if (this.pageScrollEasing) {\n                options.easingLogic = this.pageScrollEasing;\n            }\n            if (this.pageScrollDuration !== undefined && this.pageScrollDuration !== null) {\n                options.duration = this.pageScrollDuration;\n            }\n            if (this.pageScrollSpeed !== undefined && this.pageScrollSpeed !== null) {\n                options.speed = this.pageScrollSpeed;\n            }\n            if (this.pageScrollFinish) {\n                options.scrollFinishListener = this.pageScrollFinish;\n            }\n            this.pageScrollInstance = this.pageScrollService.create(options);\n        }\n        return this.pageScrollInstance;\n    }\n    pushRouterState() {\n        if (this.pageScrollAdjustHash && typeof this.pageScrollInstance.pageScrollOptions.scrollTarget === 'string'\n            && this.pageScrollInstance.pageScrollOptions.scrollTarget.substr(0, 1) === '#') {\n            // \"Navigate\" to the current route again and this time set the fragment/hash\n            this.router.navigate([], {\n                fragment: this.pageScrollInstance.pageScrollOptions.scrollTarget.substr(1),\n                queryParamsHandling: 'preserve',\n            });\n        }\n    }\n    scroll() {\n        const pageScrollInstance = this.generatePageScrollInstance();\n        this.pushRouterState();\n        this.pageScrollService.start(pageScrollInstance);\n    }\n    handleClick(clickEvent) {\n        if (this.routerLink && this.router !== null && this.router !== undefined) {\n            let urlTree;\n            if (typeof this.routerLink === 'string') {\n                urlTree = this.router.parseUrl(this.routerLink);\n            }\n            else {\n                urlTree = this.router.createUrlTree(this.routerLink);\n            }\n            if (!this.router.isActive(urlTree, true)) {\n                // We need to navigate their first.\n                // Navigation is handled by the routerLink directive so we only need to listen for route change\n                this.router.events.pipe(filter(routerEvent => {\n                    // We're only interested in successful navigations or when the navigation fails\n                    return routerEvent instanceof NavigationEnd || routerEvent instanceof NavigationError\n                        || routerEvent instanceof NavigationCancel;\n                }), \n                // Consume only one event, automatically \"unsubscribing\" from the event stream afterwards\n                take(1)).subscribe((routerEvent) => {\n                    if (routerEvent instanceof NavigationEnd) {\n                        // use a timeout to start scrolling as soon as the stack is cleared\n                        setTimeout(() => {\n                            this.scroll();\n                        }, 0);\n                    }\n                });\n                return false; // to preventDefault()\n            }\n        }\n        this.scroll();\n        return false; // to preventDefault()\n    }\n}\nNgxPageScrollDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[pageScroll]',\n                host: {\n                    '(click)': 'handleClick($event)',\n                },\n            },] }\n];\nNgxPageScrollDirective.ctorParameters = () => [\n    { type: PageScrollService },\n    { type: Router, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nNgxPageScrollDirective.propDecorators = {\n    routerLink: [{ type: Input }],\n    href: [{ type: Input }],\n    fragment: [{ type: Input }],\n    pageScrollTarget: [{ type: Input }],\n    pageScrollHorizontal: [{ type: Input }],\n    pageScrollOffset: [{ type: Input }],\n    pageScrollDuration: [{ type: Input }],\n    pageScrollSpeed: [{ type: Input }],\n    pageScrollEasing: [{ type: Input }],\n    pageScrollInterruptible: [{ type: Input }],\n    pageScrollInView: [{ type: Input }],\n    pageScrollAdjustHash: [{ type: Input }],\n    pageScroll: [{ type: Input }],\n    pageScrollFinish: [{ type: Output }]\n};\n\nclass NgxPageScrollModule {\n}\nNgxPageScrollModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    NgxPageScrollDirective,\n                ],\n                imports: [\n                    NgxPageScrollCoreModule,\n                ],\n                exports: [\n                    NgxPageScrollDirective,\n                ],\n            },] }\n];\n\n/*\n * Public API Surface of ngx-page-scroll\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxPageScrollDirective, NgxPageScrollModule };\n//# sourceMappingURL=ngx-page-scroll.js.map\n","<div class=\"fab-wrapper\">\n    <label class=\"fab-button\" for=\"fabCheckbox\">\n        <span class=\"fab-content\">\n            <a [href]=\"whatsAppUrl\" target=\"_blank\" class=\"fab-content\">\n                <i class=\"fab fa-whatsapp icon-fab\"></i>\n            </a>\n        </span>\n    </label>\n  </div>","import { InjectionToken, isDevMode, ɵɵdefineInjectable, ɵɵinject, Injectable, Inject, NgModule } from '@angular/core';\n\n/**\n * Represents a scrolling action\n */\nclass PageScrollInstance {\n    /**\n     * Private constructor, requires the properties assumed to be the bare minimum.\n     * Use the factory methods to create instances:\n     *      {@link PageScrollService#create}\n     */\n    constructor(pageScrollOptions) {\n        /**\n         * These properties will be set/manipulated if the scroll animation starts\n         */\n        /* The initial value of the scrollTop or scrollLeft position when the animation starts */\n        this.startScrollPosition = 0;\n        /* Whether an interrupt listener is attached to the body or not */\n        this.interruptListenersAttached = false;\n        /* References to the timer instance that is used to perform the scroll animation to be\n         able to clear it on animation end*/\n        this.timer = null;\n        if (!pageScrollOptions.scrollViews || pageScrollOptions.scrollViews.length === 0) {\n            pageScrollOptions.scrollViews = [\n                pageScrollOptions.document.documentElement,\n                pageScrollOptions.document.body,\n                pageScrollOptions.document.body.parentNode,\n            ];\n            this.isInlineScrolling = false;\n        }\n        else {\n            this.isInlineScrolling = true;\n        }\n        this.pageScrollOptions = pageScrollOptions;\n    }\n    static getScrollingTargetPosition(pageScrollOptions, scrollTargetElement) {\n        const body = pageScrollOptions.document.body;\n        const docEl = pageScrollOptions.document.documentElement;\n        const windowPageYOffset = pageScrollOptions.document.defaultView &&\n            pageScrollOptions.document.defaultView.pageYOffset || undefined;\n        const windowPageXOffset = pageScrollOptions.document.defaultView &&\n            pageScrollOptions.document.defaultView.pageXOffset || undefined;\n        const scrollTop = windowPageYOffset || docEl.scrollTop || body.scrollTop;\n        const scrollLeft = windowPageXOffset || docEl.scrollLeft || body.scrollLeft;\n        const clientTop = docEl.clientTop || body.clientTop || 0;\n        const clientLeft = docEl.clientLeft || body.clientLeft || 0;\n        if (scrollTargetElement === undefined || scrollTargetElement === null) {\n            // No element found, so return the current position to not cause any change in scroll position\n            return { top: scrollTop, left: scrollLeft };\n        }\n        const box = scrollTargetElement.getBoundingClientRect();\n        const top = box.top + scrollTop - clientTop;\n        const left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    }\n    static getInlineScrollingTargetPosition(pageScrollOptions, scrollTargetElement) {\n        const position = { top: scrollTargetElement.offsetTop, left: scrollTargetElement.offsetLeft };\n        if (pageScrollOptions.advancedInlineOffsetCalculation && pageScrollOptions.scrollViews.length === 1) {\n            const accumulatedParentsPos = { top: 0, left: 0 };\n            // not named window to make sure we're not getting the global window variable by accident\n            const theWindow = scrollTargetElement.ownerDocument.defaultView;\n            let parentFound = false;\n            // Start parent is the immediate parent\n            let parent = scrollTargetElement.parentElement;\n            // Iterate upwards all parents\n            while (!parentFound && parent !== undefined && parent !== null) {\n                if (theWindow.getComputedStyle(parent).getPropertyValue('position') === 'relative') {\n                    accumulatedParentsPos.top += parent.offsetTop;\n                    accumulatedParentsPos.left += parent.offsetLeft;\n                }\n                // Next iteration\n                parent = parent.parentElement;\n                parentFound = parent === pageScrollOptions.scrollViews[0];\n            }\n            if (parentFound) {\n                // Only use the results if we found the parent, otherwise we accumulated too much anyway\n                position.top += accumulatedParentsPos.top;\n                position.left += accumulatedParentsPos.left;\n            }\n            else {\n                /* TODO Uncomment\n                if (PageScrollConfig._logLevel >= 2 || (PageScrollConfig._logLevel >= 1 && isDevMode())) {\n                  console.warn('Unable to find nested scrolling targets parent!');\n                }*/\n            }\n        }\n        return position;\n    }\n    getScrollPropertyValue(scrollingView) {\n        if (!this.pageScrollOptions.verticalScrolling) {\n            return scrollingView.scrollLeft;\n        }\n        return scrollingView.scrollTop;\n    }\n    getScrollClientPropertyValue(scrollingView) {\n        if (!this.pageScrollOptions.verticalScrolling) {\n            return scrollingView.clientWidth;\n        }\n        return scrollingView.clientHeight;\n    }\n    /**\n     * Extract the exact location of the scrollTarget element.\n     *\n     * Extract the scrollTarget HTMLElement from the given PageScrollTarget object. The latter one may be\n     * a string like \"#heading2\", then this method returns the corresponding DOM element for that id.\n     *\n     */\n    extractScrollTargetPosition() {\n        const scrollTargetElement = this.getScrollTargetElement();\n        if (scrollTargetElement === null || scrollTargetElement === undefined) {\n            // Scroll target not found\n            return { top: NaN, left: NaN };\n        }\n        if (this.isInlineScrolling) {\n            return PageScrollInstance.getInlineScrollingTargetPosition(this.pageScrollOptions, scrollTargetElement);\n        }\n        return PageScrollInstance.getScrollingTargetPosition(this.pageScrollOptions, scrollTargetElement);\n    }\n    /**\n     * Get the top offset of the scroll animation.\n     * This automatically takes the offset location of the scrolling container/scrolling view\n     * into account (for nested/inline scrolling).\n     */\n    getCurrentOffset() {\n        return this.pageScrollOptions.scrollOffset;\n    }\n    /**\n     * Sets the \"scrollTop\" or \"scrollLeft\" property for all scrollViews to the provided value\n     * @return true if at least for one ScrollTopSource the scrollTop/scrollLeft value could be set and it kept the new value.\n     *          false if it failed for all ScrollViews, meaning that we should stop the animation\n     *          (probably because we're at the end of the scrolling region)\n     */\n    setScrollPosition(position) {\n        // Set the new scrollTop/scrollLeft to all scrollViews elements\n        return this.pageScrollOptions.scrollViews.reduce((oneAlreadyWorked, scrollingView) => {\n            const startScrollPropertyValue = this.getScrollPropertyValue(scrollingView);\n            if (scrollingView && startScrollPropertyValue !== undefined && startScrollPropertyValue !== null) {\n                const scrollDistance = Math.abs(startScrollPropertyValue - position);\n                // The movement we need to perform is less than 2px\n                // This we consider a small movement which some browser may not perform when\n                // changing the scrollTop/scrollLeft property\n                // Thus in this cases we do not stop the scroll animation, although setting the\n                // scrollTop/scrollLeft value \"fails\"\n                const isSmallMovement = scrollDistance < this.pageScrollOptions._minScrollDistance;\n                if (!this.pageScrollOptions.verticalScrolling) {\n                    scrollingView.scrollLeft = position;\n                }\n                else {\n                    scrollingView.scrollTop = position;\n                }\n                // Return true if setting the new scrollTop/scrollLeft value worked\n                // We consider that it worked if the new scrollTop/scrollLeft value is closer to the\n                // desired scrollTop/scrollLeft than before (it might not be exactly the value we\n                // set due to dpi or rounding irregularities)\n                if (isSmallMovement || scrollDistance > Math.abs(this.getScrollPropertyValue(scrollingView) - position)) {\n                    return true;\n                }\n            }\n            return oneAlreadyWorked;\n        }, false);\n    }\n    /**\n     * Trigger firing a animation finish event\n     * @param value Whether the animation finished at the target (true) or got interrupted (false)\n     */\n    fireEvent(value) {\n        if (this.pageScrollOptions.scrollFinishListener) {\n            this.pageScrollOptions.scrollFinishListener.emit(value);\n        }\n    }\n    /**\n     * Attach the interrupt listeners to the PageScrollInstance body. The given interruptReporter\n     * will be called if any of the attached events is fired.\n     *\n     * Possibly attached interruptListeners are automatically removed from the body before the new one will be attached.\n     */\n    attachInterruptListeners(interruptReporter) {\n        if (this.interruptListenersAttached) {\n            // Detach possibly existing listeners first\n            this.detachInterruptListeners();\n        }\n        this.interruptListener = (event) => {\n            interruptReporter.report(event, this);\n        };\n        this.pageScrollOptions.interruptEvents.forEach((event) => this.pageScrollOptions.document.body.addEventListener(event, this.interruptListener));\n        this.interruptListenersAttached = true;\n    }\n    /**\n     * Remove event listeners from the body and stop listening for events that might be treated as \"animation\n     * interrupt\" events.\n     */\n    detachInterruptListeners() {\n        this.pageScrollOptions.interruptEvents.forEach((event) => this.pageScrollOptions.document.body.removeEventListener(event, this.interruptListener));\n        this.interruptListenersAttached = false;\n    }\n    getScrollTargetElement() {\n        if (typeof this.pageScrollOptions.scrollTarget === 'string') {\n            const targetSelector = this.pageScrollOptions.scrollTarget;\n            if (targetSelector.match(/^#[^\\s]+$/g) !== null) {\n                // It's an id selector and a valid id, as it does not contain any white space characters\n                return this.pageScrollOptions.document.getElementById(targetSelector.substr(1));\n            }\n            return this.pageScrollOptions.document.querySelector(targetSelector);\n        }\n        return this.pageScrollOptions.scrollTarget;\n    }\n}\n\nconst NGXPS_CONFIG = new InjectionToken('ngxps_config');\nconst ɵ0 = (t, b, c, d) => {\n    // Linear easing\n    return c * t / d + b;\n};\nconst defaultPageScrollConfig = {\n    _interval: 10,\n    _minScrollDistance: 2,\n    _logLevel: 1,\n    namespace: 'default',\n    verticalScrolling: true,\n    duration: 1250,\n    scrollOffset: 0,\n    advancedInlineOffsetCalculation: false,\n    interruptEvents: ['mousedown', 'wheel', 'DOMMouseScroll', 'mousewheel', 'keyup', 'touchmove'],\n    interruptKeys: [' ', 'Escape', 'Tab', 'Enter', 'PageUp', 'PageDown', 'Home', 'End', 'ArrowUp', 'ArrowRight', 'ArrowLeft', 'ArrowDown'],\n    interruptible: true,\n    scrollInView: true,\n    easingLogic: ɵ0,\n};\n\nclass PageScrollService {\n    constructor(customConfig) {\n        this.runningInstances = [];\n        this.onInterrupted = {\n            report: (event, pageScrollInstance) => {\n                if (!pageScrollInstance.pageScrollOptions.interruptible) {\n                    // Non-interruptible anyway, so do not stop anything\n                    return;\n                }\n                let shouldStop = true;\n                if (event.type === 'keyup') {\n                    // Only stop if specific keys have been pressed, for all others don't stop anything\n                    if (this.config.interruptKeys.indexOf(event.key) === -1) {\n                        // The pressed key is not in the list of interrupting keys\n                        shouldStop = false;\n                    }\n                }\n                else if (event.type === 'mousedown') {\n                    // For mousedown events we only stop the scroll animation of the mouse has\n                    // been clicked inside the scrolling container\n                    if (!pageScrollInstance.pageScrollOptions.scrollViews.some(scrollingView => scrollingView.contains(event.target))) {\n                        // Mouse clicked an element which is not inside any of the the scrolling containers\n                        shouldStop = false;\n                    }\n                }\n                if (shouldStop) {\n                    this.stopAll(pageScrollInstance.pageScrollOptions.namespace);\n                }\n            },\n        };\n        this.config = Object.assign(Object.assign({}, defaultPageScrollConfig), customConfig);\n    }\n    stopInternal(interrupted, pageScrollInstance) {\n        const index = this.runningInstances.indexOf(pageScrollInstance);\n        if (index >= 0) {\n            this.runningInstances.splice(index, 1);\n        }\n        if (pageScrollInstance.interruptListenersAttached) {\n            pageScrollInstance.detachInterruptListeners();\n        }\n        if (pageScrollInstance.timer) {\n            // Clear/Stop the timer\n            clearInterval(pageScrollInstance.timer);\n            // Clear the reference to this timer\n            pageScrollInstance.timer = undefined;\n            pageScrollInstance.fireEvent(!interrupted);\n            return true;\n        }\n        return false;\n    }\n    create(options) {\n        return new PageScrollInstance(Object.assign(Object.assign({}, this.config), options));\n    }\n    /**\n     * Start a scroll animation. All properties of the animation are stored in the given {@link PageScrollInstance} object.\n     *\n     * This is the core functionality of the whole library.\n     */\n    // tslint:disable-next-line:cyclomatic-complexity\n    start(pageScrollInstance) {\n        // Merge the default options in the pageScrollInstance options\n        pageScrollInstance.pageScrollOptions = Object.assign(Object.assign({}, this.config), pageScrollInstance.pageScrollOptions);\n        // Stop all possibly running scroll animations in the same namespace\n        this.stopAll(pageScrollInstance.pageScrollOptions.namespace);\n        if (pageScrollInstance.pageScrollOptions.scrollViews === null || pageScrollInstance.pageScrollOptions.scrollViews.length === 0) {\n            // No scrollViews specified, thus we can't animate anything\n            if (this.config._logLevel >= 2 || (this.config._logLevel >= 1 && isDevMode())) {\n                console.warn('No scrollViews specified, thus ngx-page-scroll does not know which DOM elements to scroll');\n            }\n            return;\n        }\n        let startScrollPositionFound = false;\n        let scrollRange = pageScrollInstance.getScrollClientPropertyValue(pageScrollInstance.pageScrollOptions.scrollViews[0]);\n        // Reset start scroll position to 0. If any of the scrollViews has a different one, it will be extracted next\n        pageScrollInstance.startScrollPosition = 0;\n        // Get the start scroll position from the scrollViews (e.g. if the user already scrolled down the content)\n        pageScrollInstance.pageScrollOptions.scrollViews.forEach(scrollingView => {\n            if (scrollingView === undefined || scrollingView === null) {\n                return;\n            }\n            // Get the scrollTop or scrollLeft value of the first scrollingView that returns a value for its \"scrollTop\"\n            // or \"scrollLeft\" property that is not undefined and unequal to 0\n            const scrollPosition = pageScrollInstance.getScrollPropertyValue(scrollingView);\n            if (!startScrollPositionFound && scrollPosition) {\n                // We found a scrollingView that does not have scrollTop or scrollLeft 0\n                // Return the scroll position value, as this will be our startScrollPosition\n                pageScrollInstance.startScrollPosition = scrollPosition;\n                startScrollPositionFound = true;\n                // Remember te scrollRange of this scrollingView\n                scrollRange = pageScrollInstance.getScrollClientPropertyValue(scrollingView);\n            }\n        });\n        const pageScrollOffset = pageScrollInstance.getCurrentOffset();\n        // Calculate the target position that the scroll animation should go to\n        const scrollTargetPosition = pageScrollInstance.extractScrollTargetPosition();\n        pageScrollInstance.targetScrollPosition = Math.round((pageScrollInstance.pageScrollOptions.verticalScrolling ? scrollTargetPosition.top : scrollTargetPosition.left) - pageScrollOffset);\n        // Calculate the distance we need to go in total\n        pageScrollInstance.distanceToScroll = pageScrollInstance.targetScrollPosition - pageScrollInstance.startScrollPosition;\n        if (isNaN(pageScrollInstance.distanceToScroll)) {\n            // We weren't able to find the target position, maybe the element does not exist?\n            if (this.config._logLevel >= 2 || (this.config._logLevel >= 1 && isDevMode())) {\n                console.log('Scrolling not possible, as we can\\'t find the specified target');\n            }\n            pageScrollInstance.fireEvent(false);\n            return;\n        }\n        // We're at the final destination already\n        // OR we need to scroll down but are already at the end\n        // OR we need to scroll up but are at the top already\n        const allReadyAtDestination = Math.abs(pageScrollInstance.distanceToScroll) < pageScrollInstance.pageScrollOptions._minScrollDistance;\n        // Check how long we need to scroll if a speed option is given\n        // Default executionDuration is the specified duration\n        pageScrollInstance.executionDuration = pageScrollInstance.pageScrollOptions.duration;\n        // Maybe we need to pay attention to the speed option?\n        if ((pageScrollInstance.pageScrollOptions.speed !== undefined && pageScrollInstance.pageScrollOptions.speed !== null) &&\n            (pageScrollInstance.pageScrollOptions.duration === undefined || pageScrollInstance.pageScrollOptions.duration === null)) {\n            // Speed option is set and no duration => calculate duration based on speed and scroll distance\n            pageScrollInstance.executionDuration =\n                Math.abs(pageScrollInstance.distanceToScroll) / pageScrollInstance.pageScrollOptions.speed * 1000;\n        }\n        // We should go there directly, as our \"animation\" would have one big step\n        // only anyway and this way we save the interval stuff\n        const tooShortInterval = pageScrollInstance.executionDuration <= pageScrollInstance.pageScrollOptions._interval;\n        if (allReadyAtDestination || tooShortInterval) {\n            if (this.config._logLevel >= 2 || (this.config._logLevel >= 1 && isDevMode())) {\n                if (allReadyAtDestination) {\n                    console.log('Scrolling not possible, as we can\\'t get any closer to the destination');\n                }\n                else {\n                    console.log('Scroll duration shorter that interval length, jumping to target');\n                }\n            }\n            pageScrollInstance.setScrollPosition(pageScrollInstance.targetScrollPosition);\n            pageScrollInstance.fireEvent(true);\n            return;\n        }\n        if (!pageScrollInstance.pageScrollOptions.scrollInView) {\n            const alreadyInView = pageScrollInstance.targetScrollPosition > pageScrollInstance.startScrollPosition &&\n                pageScrollInstance.targetScrollPosition <= pageScrollInstance.startScrollPosition + scrollRange;\n            if (alreadyInView) {\n                if (this.config._logLevel >= 2 || (this.config._logLevel >= 1 && isDevMode())) {\n                    console.log('Not scrolling, as target already in view');\n                }\n                pageScrollInstance.fireEvent(true);\n                return;\n            }\n        }\n        // Register the interrupt listeners if we want an interruptible scroll animation\n        if (pageScrollInstance.pageScrollOptions.interruptible) {\n            pageScrollInstance.attachInterruptListeners(this.onInterrupted);\n        }\n        // Let's get started, get the start time...\n        pageScrollInstance.startTime = new Date().getTime();\n        // .. and calculate the end time (when we need to finish at last)\n        pageScrollInstance.endTime = pageScrollInstance.startTime + pageScrollInstance.executionDuration;\n        pageScrollInstance.timer = setInterval((instance) => {\n            // Take the current time\n            const currentTime = new Date().getTime();\n            // Determine the new scroll position\n            let newScrollPosition;\n            let stopNow = false;\n            if (instance.endTime <= currentTime) {\n                // We're over the time already, so go the targetScrollPosition (aka destination)\n                newScrollPosition = instance.targetScrollPosition;\n                stopNow = true;\n            }\n            else {\n                // Calculate the scroll position based on the current time using the easing function\n                newScrollPosition = Math.round(instance.pageScrollOptions.easingLogic(currentTime - instance.startTime, instance.startScrollPosition, instance.distanceToScroll, instance.executionDuration));\n            }\n            if (this.config._logLevel >= 5 && isDevMode()) {\n                console.warn('Scroll Position: ' + newScrollPosition);\n            }\n            // Set the new scrollPosition to all scrollViews elements\n            if (!instance.setScrollPosition(newScrollPosition)) {\n                // Setting the new scrollTop/scrollLeft value failed for all ScrollViews\n                // early stop the scroll animation to save resources\n                stopNow = true;\n            }\n            // At the end do the internal stop maintenance and fire the pageScrollFinish event\n            // (otherwise the event might arrive at \"too early\")\n            if (stopNow) {\n                this.stopInternal(false, instance);\n            }\n        }, this.config._interval, pageScrollInstance);\n        // Register the instance as running one\n        this.runningInstances.push(pageScrollInstance);\n    }\n    scroll(options) {\n        this.start(this.create(options));\n    }\n    /**\n     * Stop all running scroll animations. Optionally limit to stop only the ones of specific namespace.\n     */\n    stopAll(namespace) {\n        if (this.runningInstances.length > 0) {\n            let stoppedSome = false;\n            for (let i = 0; i < this.runningInstances.length; ++i) {\n                const pageScrollInstance = this.runningInstances[i];\n                if (!namespace || pageScrollInstance.pageScrollOptions.namespace === namespace) {\n                    stoppedSome = true;\n                    this.stopInternal(true, pageScrollInstance);\n                    // Decrease the counter, as we removed an item from the array we iterate over\n                    i--;\n                }\n            }\n            return stoppedSome;\n        }\n        return false;\n    }\n    stop(pageScrollInstance) {\n        return this.stopInternal(true, pageScrollInstance);\n    }\n}\nPageScrollService.ɵprov = ɵɵdefineInjectable({ factory: function PageScrollService_Factory() { return new PageScrollService(ɵɵinject(NGXPS_CONFIG)); }, token: PageScrollService, providedIn: \"root\" });\nPageScrollService.decorators = [\n    { type: Injectable, args: [{\n                providedIn: 'root',\n            },] }\n];\nPageScrollService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [NGXPS_CONFIG,] }] }\n];\n\nconst ɵ0$1 = {};\nclass NgxPageScrollCoreModule {\n    static forRoot(config) {\n        return {\n            ngModule: NgxPageScrollCoreModule,\n            providers: [PageScrollService, { provide: NGXPS_CONFIG, useValue: config }],\n        };\n    }\n}\nNgxPageScrollCoreModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    PageScrollService,\n                    { provide: NGXPS_CONFIG, useValue: ɵ0$1 },\n                ],\n            },] }\n];\n\n/*\n * Public API Surface of ngx-page-scroll-core\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NGXPS_CONFIG, NgxPageScrollCoreModule, PageScrollInstance, PageScrollService, defaultPageScrollConfig };\n//# sourceMappingURL=ngx-page-scroll-core.js.map\n","<app-header-two></app-header-two>\r\n<app-breadcrumbs></app-breadcrumbs>\r\n<app-content></app-content>\r\n<app-footer></app-footer>\r\n<app-fab-button></app-fab-button>","import { Component, OnInit } from '@angular/core';\nimport { WhatsappService } from '../../helper/whatsapp.service';\n\n@Component({\n  selector: 'app-fab-button',\n  templateUrl: './fab-button.component.html',\n  styleUrls: ['./fab-button.component.css']\n})\nexport class FabButtonComponent implements OnInit {\n\n  whatsAppUrl = '';\n\n  constructor(private whatsAppService: WhatsappService) { }\n\n  ngOnInit(): void {\n    this.whatsAppUrl = this.whatsAppService.getWhatsAppUrl();\n  }\n\n}\n","import { Injectable, AfterContentInit, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport doctor from '../../data/doctor/doctor.json';\r\nimport category from '../../data/category.json';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorHelperService implements AfterContentInit, OnInit {\r\n  // pagination\r\n  page: number = 1;\r\n  // Doctor\r\n  public doctorblock = doctor;\r\n  public doctordetails = doctor;\r\n  // Category\r\n  public category = category;\r\n  public doctorcategory = category;\r\n  constructor(private router: ActivatedRoute) {}\r\n  // Add Heart\r\n  public favorite: boolean = false;\r\n  favoriteTrigger(item: { favorite: boolean; }) {\r\n    item.favorite = !item.favorite;\r\n  }\r\n  // Category\r\n  public getCategories(items: string | any[]) {\r\n    var elems = category.filter((item: { id: string; }) => {\r\n      return items.includes(item.id)\r\n    });\r\n    return elems;\r\n  }\r\n  // Author\r\n  public getAuthor(items: string | any[]) {\r\n    var elems = doctor.filter((item: { id: string; }) => {\r\n      return items.includes(item.id)\r\n    });\r\n    return elems;\r\n  }\r\n  // Doctor Details\r\n  public getDoctor(id: any) {\r\n    this.doctordetails = doctor.filter((item: { id: any; }) => { return item.id == id });\r\n  }\r\n  // Category Filter\r\n  public setCategory(id: any) {\r\n    this.doctorcategory = id;\r\n  }\r\n  public getCategory() {\r\n    return this.doctorcategory;\r\n  }\r\n  public getDoctorsByCategory(catId: string) {\r\n    return this.doctorblock = doctor.filter((item: { category: number[]; }) => { return item.category.includes(parseInt(catId)) });\r\n  }\r\n  // Fetch All filter\r\n  public setDoctors() {\r\n    var doctorsByCategory = this.getCategory() != undefined ? this.getDoctorsByCategory(this.getCategory()) : '';\r\n    if ((doctorsByCategory != '' || doctorsByCategory != undefined || doctorsByCategory != null) && doctorsByCategory.length > 0) {\r\n      this.doctorblock = doctorsByCategory;\r\n    } \r\n  }\r\n  ngAfterContentInit(): void {\r\n    this.setCategory(this.router.snapshot.params.catId);\r\n    this.setDoctors();\r\n    this.getDoctor(this.router.snapshot.params.id);\r\n  }\r\n  ngOnInit(): void {\r\n\r\n  }\r\n}\r\n","import { AfterContentInit, Component } from '@angular/core';\r\nimport { DoctorHelperService } from 'src/app/components/helper/doctor/doctor-helper.service';\r\n\r\n@Component({\r\n  selector: 'app-content',\r\n  templateUrl: './content.component.html',\r\n  styleUrls: ['./content.component.css']\r\n})\r\nexport class ContentComponent extends DoctorHelperService implements AfterContentInit {\r\n  ngAfterContentInit(){\r\n    this.setCategory(1);\r\n    this.setDoctors();\r\n    this.getDoctor(1);\r\n  }\r\n}\r\n"]}